[{"C:\\infinity_react\\src\\index.js":"1","C:\\infinity_react\\src\\reportWebVitals.js":"2","C:\\infinity_react\\src\\App.js":"3","C:\\infinity_react\\src\\routes.js":"4","C:\\infinity_react\\src\\pages\\login\\index.js":"5","C:\\infinity_react\\src\\pages\\cadastro\\index.js":"6","C:\\infinity_react\\src\\firebaseConnection.js":"7"},{"size":517,"mtime":1635106449916,"results":"8","hashOfConfig":"9"},{"size":375,"mtime":1635106449917,"results":"10","hashOfConfig":"9"},{"size":197,"mtime":1635117096540,"results":"11","hashOfConfig":"9"},{"size":312,"mtime":1635125850638,"results":"12","hashOfConfig":"9"},{"size":3790,"mtime":1635111526997,"results":"13","hashOfConfig":"9"},{"size":7085,"mtime":1635133517748,"results":"14","hashOfConfig":"9"},{"size":570,"mtime":1635125620952,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"v3slta",{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"C:\\infinity_react\\src\\index.js",[],["34","35"],"C:\\infinity_react\\src\\reportWebVitals.js",[],"C:\\infinity_react\\src\\App.js",["36"],"import './App.css';\r\nimport FormLogin from './pages/login';\r\nimport Routes from './routes';\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Routes/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\infinity_react\\src\\routes.js",["37"],"import { BrowserRouter, Route } from \"react-router-dom\";\r\nimport Login from './pages/login'\r\nimport Cadastro from \"./pages/cadastro\";\r\n\r\nconst Routes = () => {\r\n    return(\r\n        <BrowserRouter>\r\n            <Route path=\"/\" component={Cadastro} />\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default Routes;","C:\\infinity_react\\src\\pages\\login\\index.js",["38"],"import React, { Component } from 'react';\r\nimport './index.css'\r\nimport './util.css'\r\n\r\nclass Login extends Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            form: {\r\n                username: \"\",\r\n                password: \"\"\r\n            }\r\n        }\r\n\r\n        this.loginData = this.loginData.bind(this);\r\n        this.btEntrarClick = this.btEntrarClick.bind(this);\r\n    }\r\n\r\n    loginData(e){\r\n        let form = this.state.form;\r\n        form[e.target.name] = e.target.value;\r\n        this.setState({form: form});\r\n    }\r\n\r\n    btEntrarClick(){\r\n        let username = this.state.form.username;\r\n        let password = this.state.form.password;\r\n        alert(\"user: \" + username + \" password: \" + password)\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div class=\"limiter\">\r\n                <div class=\"container-login100\">\r\n                    <div class=\"wrap-login100 p-l-85 p-r-85 p-t-55 p-b-55\">\r\n                        <div class=\"login100-form validate-form flex-sb flex-w\">\r\n                            <span class=\"login100-form-title p-b-32\">\r\n                                INFINITE\r\n                            </span>\r\n\r\n                            <span class=\"txt1 p-b-11\">\r\n                                Usuário\r\n                            </span>\r\n                            <div class=\"wrap-input100 validate-input m-b-36\" data-validate = \"Digite o e-mail\">\r\n                                <input class=\"input100\" type=\"text\" name=\"username\" placeholder=\"Usuário\" id=\"tUsername\"\r\n                                        value={this.state.form.username} onChange={this.loginData} />\r\n                                <span class=\"focus-input100\"></span>\r\n                            </div>\r\n                            \r\n                            <span class=\"txt1 p-b-11\">\r\n                                Senha\r\n                            </span>\r\n                            <div class=\"wrap-input100 validate-input m-b-12\" data-validate = \"Digite a senha\">\r\n                                <span class=\"btn-show-pass\">\r\n                                    <i class=\"fa fa-eye\"></i>\r\n                                </span>\r\n                                <input class=\"input100\" type=\"password\" name=\"password\" placeholder=\"Senha\"  id=\"tPassword\"\r\n                                        value={this.state.form.password} onChange={this.loginData} />\r\n                                <span class=\"focus-input100\"></span>\r\n                            </div>\r\n                            \r\n                            <div class=\"flex-sb-m w-full p-b-48\">\r\n                                <div class=\"contact100-form-checkbox\">\r\n                                    <input class=\"input-checkbox100\" id=\"ckb1\" type=\"checkbox\" name=\"remember-me\"/>\r\n                                    <label class=\"label-checkbox100\" for=\"ckb1\">\r\n                                        Lembrar-me\r\n                                    </label>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <a href=\"#\" class=\"txt3\">\r\n                                        Esqueceu a senha?\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"container-login100-form-btn\">\r\n                                <button class=\"login100-form-btn\" onClick={this.btEntrarClick}>\r\n                                    Entrar\r\n                                </button>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Login;","C:\\infinity_react\\src\\pages\\cadastro\\index.js",["39","40"],"C:\\infinity_react\\src\\firebaseConnection.js",[],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":2,"column":8,"nodeType":"47","messageId":"48","endLine":2,"endColumn":17},{"ruleId":"45","severity":1,"message":"49","line":2,"column":8,"nodeType":"47","messageId":"48","endLine":2,"endColumn":13},{"ruleId":"50","severity":1,"message":"51","line":72,"column":37,"nodeType":"52","endLine":72,"endColumn":62},{"ruleId":"45","severity":1,"message":"53","line":6,"column":9,"nodeType":"47","messageId":"48","endLine":6,"endColumn":17},{"ruleId":"45","severity":1,"message":"54","line":6,"column":19,"nodeType":"47","messageId":"48","endLine":6,"endColumn":28},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'FormLogin' is defined but never used.","Identifier","unusedVar","'Login' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useState' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]