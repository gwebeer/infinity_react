{"ast":null,"code":"var _jsxFileName = \"C:\\\\infinity_react\\\\src\\\\pages\\\\conteudo\\\\index.js\";\nimport React, { Component } from 'react';\nimport Post from '../../components/post/posts.js';\nimport MenuUsuario from '../../components/menuUsuario';\nimport Header from '../../components/header';\nimport '../../css/templateHome/animate.css';\nimport '../../css/templateHome/bootstrap.min.css';\nimport '../../css/templateHome/jquery.mCustomScrollbar.min.css';\nimport '../../css/templateHome/responsive.css';\nimport '../../css/templateHome/style.css';\nimport '../../css/templateHome/cssFonts/line-awesome.css';\nimport '../../css/templateHome/cssFonts/line-awesome-font-awesome.min.css';\nimport '../../css/templateHome/cssFonts/font-awesome.min.css';\nimport '../../css/templateHome/vendor/fontawesome-free/css/all.min.css';\nimport '../../css/templateHome/lib/slick/slick.css';\nimport '../../css/templateHome/lib/slick/slick-theme.css';\nimport firebase from 'firebase';\nimport Titulo from '../../components/titulo/index.js';\nimport Postbar from '../../components/postbar/index.js';\nimport NotFound from '../../components/notFound/posts.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Conteudo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userLog: \"\",\n      nameLog: \"\",\n      userId: \"\",\n      listaSeguindo: [],\n      url: \"https://firebasestorage.googleapis.com/v0/b/infinityreact-80aef.appspot.com/o/usuario%2F3hR4mxD5ORWzjasgCy11qwBIi0K2?alt=media&token=fad1d15d-84ef-48bb-b177-390e6f9bfe5a\",\n      nome: \"\",\n      categoria: \"\",\n      genero: \"\",\n      ano: \"\",\n      duracao: \"\",\n      sinopse: \"\",\n      seguidores: 0,\n      loading: true,\n      posts: []\n    };\n\n    this.componentDidMount = () => {\n      // Página de espera\n      this.dbValidation(); // this.searchPosts();\n    };\n\n    this.componentDidUpdate = () => {\n      this.searchPosts();\n    };\n\n    this.searchPosts = this.searchPosts.bind(this);\n    this.titleId = this.titleId.bind(this);\n    this.dbValidation = this.dbValidation.bind(this);\n    this.carregarInformações = this.carregarInformações.bind(this);\n  }\n\n  titleId() {\n    var url = window.location.href;\n    var idTitulo = url.substring(url.lastIndexOf('?id=') + 4);\n    return idTitulo;\n  }\n\n  async dbValidation() {\n    // Extrai id do conteudo da url\n    let idTitulo = this.titleId(); // Verifica se está logado\n\n    firebase.auth().onAuthStateChanged(user => {\n      if (!user) {\n        // Se não tiver encaminha para login\n        window.location = '/login';\n      } // Retorna as informações relevantes do usuário logado\n\n\n      firebase.firestore().collection('users').doc(user.uid).get().then(snapshot => {\n        firebase.storage().ref('usuario').child(user.uid).getDownloadURL().then(url => {\n          this.setState({\n            url: url\n          });\n        }); // this.state.nomeLogado = snapshot.data().nome;\n\n        this.setState({\n          nameLog: snapshot.data().nome,\n          listaSeguindo: snapshot.data().seguindo,\n          userLog: snapshot.data().username,\n          userId: user.uid\n        }, () => {\n          this.carregarInformações();\n        });\n      }); // Retorna as informações do conteúdo acessado\n\n      firebase.firestore().collection('conteudos').doc(idTitulo).get().then(snapshot => {\n        this.setState({\n          nome: snapshot.data().nome,\n          categoria: snapshot.data().categoria,\n          genero: snapshot.data().genero,\n          ano: snapshot.data().ano,\n          duracao: snapshot.data().duracao,\n          sinopse: snapshot.data().sinopse,\n          seguidores: snapshot.data().seguidores\n        });\n      });\n    });\n  }\n\n  carregarInformações() {\n    let idTitulo = this.titleId();\n\n    if (this.state.listaSeguindo.indexOf(idTitulo) > -1) {\n      this.setState({\n        btSeguir: \"Seguindo\"\n      });\n    }\n  }\n\n  async searchPosts() {\n    // Extrai id do conteudo da url\n    let idTitulo = this.titleId(); // Retorna itens da coleção posts\n\n    firebase.firestore().collection('posts').get().then(snapshot => {\n      let posts = []; // Percorre os posts adiciona ao array caso for relacionado\n\n      snapshot.forEach(doc => {\n        if (doc.data().idConteudo == idTitulo) {\n          posts.push({\n            usuario: doc.data().usuario,\n            nome: doc.data().nome,\n            desc: doc.data().desc,\n            curtidas: doc.data().curtidas,\n            idConteudo: doc.data().idConteudo,\n            nomeConteudo: doc.data().nomeConteudo,\n            comentarios: doc.data().comentarios,\n            categoria: doc.data().categoria,\n            userPost: doc.data().userId\n          });\n        }\n      }); // Define o array de componentes 'posts' montados\n\n      let foundPosts = []; // Se não encontrar posts, chama o componente <NotFound/>\n\n      if (posts.length == 0) {\n        foundPosts.push( /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 33\n        }, this));\n      } else {\n        // Se encontrar, monta os posts com as informações do post\n        posts.forEach(doc => {\n          foundPosts.push( /*#__PURE__*/_jsxDEV(Post, {\n            usuario: doc.usuario,\n            nome: doc.nome,\n            categoria: doc.categoria,\n            userId: doc.userPost,\n            desc: doc.desc,\n            curtidas: doc.curtidas,\n            postId: doc.postId,\n            nomeConteudo: doc.nomeConteudo,\n            comentarios: doc.comentarios\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 37\n          }, this));\n        });\n      } // Atualiza o state contendo posts montados\n\n\n      this.setState({\n        posts: foundPosts\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        username: this.state.userLog\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"main-section\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"main-section-data\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"row\",\n                children: [/*#__PURE__*/_jsxDEV(MenuUsuario, {\n                  name: this.state.nameLog,\n                  username: this.state.userLog,\n                  url: this.state.url,\n                  userId: this.state.userId\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"col-lg-9 col-md-8 no-pd\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"main-ws-sec\",\n                    children: [/*#__PURE__*/_jsxDEV(Titulo, {\n                      nome: this.state.nome,\n                      categoria: this.state.categoria,\n                      genero: this.state.genero,\n                      ano: this.state.ano,\n                      duracao: this.state.duracao,\n                      sinopse: this.state.sinopse,\n                      seguidores: this.state.seguidores,\n                      listaSeguindo: this.state.listaSeguindo,\n                      userId: this.state.userId\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 197,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Postbar, {\n                      categoria: this.state.categoria,\n                      nomeConteudo: this.state.nome,\n                      nomeUsuario: this.state.nameLog,\n                      userId: this.state.userId,\n                      userLog: this.state.userLog\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 208,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      class: \"posts-section\",\n                      children: this.state.posts\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 215,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 195,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Conteudo;","map":{"version":3,"sources":["C:/infinity_react/src/pages/conteudo/index.js"],"names":["React","Component","Post","MenuUsuario","Header","firebase","Titulo","Postbar","NotFound","Conteudo","constructor","props","state","userLog","nameLog","userId","listaSeguindo","url","nome","categoria","genero","ano","duracao","sinopse","seguidores","loading","posts","componentDidMount","dbValidation","componentDidUpdate","searchPosts","bind","titleId","carregarInformações","window","location","href","idTitulo","substring","lastIndexOf","auth","onAuthStateChanged","user","firestore","collection","doc","uid","get","then","snapshot","storage","ref","child","getDownloadURL","setState","data","seguindo","username","indexOf","btSeguir","forEach","idConteudo","push","usuario","desc","curtidas","nomeConteudo","comentarios","userPost","foundPosts","length","postId","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport Post from '../../components/post/posts.js';\r\nimport MenuUsuario from '../../components/menuUsuario';\r\nimport Header from '../../components/header';\r\n\r\nimport '../../css/templateHome/animate.css';\r\nimport '../../css/templateHome/bootstrap.min.css';\r\nimport '../../css/templateHome/jquery.mCustomScrollbar.min.css'\r\nimport '../../css/templateHome/responsive.css';\r\nimport '../../css/templateHome/style.css';\r\n\r\nimport '../../css/templateHome/cssFonts/line-awesome.css'\r\nimport '../../css/templateHome/cssFonts/line-awesome-font-awesome.min.css'\r\nimport '../../css/templateHome/cssFonts/font-awesome.min.css'\r\n\r\nimport '../../css/templateHome/vendor/fontawesome-free/css/all.min.css';\r\nimport '../../css/templateHome/lib/slick/slick.css';\r\nimport '../../css/templateHome/lib/slick/slick-theme.css';\r\n\r\nimport firebase from 'firebase';\r\n\r\nimport Titulo from '../../components/titulo/index.js';\r\nimport Postbar from '../../components/postbar/index.js';\r\nimport NotFound from '../../components/notFound/posts.js';\r\n\r\nclass Conteudo extends Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            userLog: \"\",\r\n            nameLog: \"\",\r\n            userId: \"\",\r\n            listaSeguindo: [],\r\n            url: \"https://firebasestorage.googleapis.com/v0/b/infinityreact-80aef.appspot.com/o/usuario%2F3hR4mxD5ORWzjasgCy11qwBIi0K2?alt=media&token=fad1d15d-84ef-48bb-b177-390e6f9bfe5a\",\r\n\r\n            nome: \"\",\r\n            categoria: \"\",\r\n            genero: \"\",\r\n            ano: \"\",\r\n            duracao: \"\",\r\n            sinopse: \"\",\r\n            seguidores: 0,\r\n            \r\n            loading: true,\r\n            posts: [\r\n            ]\r\n        }\r\n\r\n        this.componentDidMount = () => {\r\n            // Página de espera\r\n            this.dbValidation();\r\n            \r\n            // this.searchPosts();\r\n        }\r\n\r\n        this.componentDidUpdate = () => {\r\n            this.searchPosts();\r\n        }\r\n\r\n        this.searchPosts = this.searchPosts.bind(this);\r\n        this.titleId = this.titleId.bind(this);\r\n        this.dbValidation = this.dbValidation.bind(this);\r\n        this.carregarInformações = this.carregarInformações.bind(this);\r\n    }\r\n\r\n\r\n    titleId() {\r\n        var url = window.location.href\r\n        var idTitulo = url.substring(url.lastIndexOf('?id=') + 4);\r\n        return idTitulo;\r\n    }\r\n\r\n    async dbValidation() {\r\n        // Extrai id do conteudo da url\r\n        let idTitulo = this.titleId();\r\n\r\n        // Verifica se está logado\r\n        firebase.auth().onAuthStateChanged((user)=>{\r\n            if(!user){\r\n                // Se não tiver encaminha para login\r\n                window.location = '/login';\r\n            }\r\n\r\n            // Retorna as informações relevantes do usuário logado\r\n            firebase.firestore().collection('users')\r\n            .doc(user.uid)\r\n            .get()\r\n            .then((snapshot) => {\r\n\r\n                firebase.storage().ref('usuario').child(user.uid).getDownloadURL()\r\n                    .then((url) => {\r\n                        this.setState({url: url})\r\n                    })\r\n\r\n                // this.state.nomeLogado = snapshot.data().nome;\r\n                this.setState({\r\n                    nameLog: snapshot.data().nome,\r\n                    listaSeguindo: snapshot.data().seguindo,\r\n                    userLog: snapshot.data().username,\r\n                    userId: user.uid\r\n                }, () => {this.carregarInformações()})\r\n            })\r\n            \r\n\r\n            // Retorna as informações do conteúdo acessado\r\n            firebase.firestore().collection('conteudos')\r\n            .doc(idTitulo)\r\n            .get()\r\n            .then((snapshot) => {\r\n                this.setState({\r\n                    nome: snapshot.data().nome,\r\n                    categoria: snapshot.data().categoria,\r\n                    genero: snapshot.data().genero,\r\n                    ano: snapshot.data().ano,\r\n                    duracao: snapshot.data().duracao,\r\n                    sinopse: snapshot.data().sinopse,\r\n                    seguidores: snapshot.data().seguidores\r\n                })\r\n            })       \r\n        })\r\n    }\r\n\r\n    carregarInformações() {\r\n        let idTitulo = this.titleId();\r\n\r\n        if (this.state.listaSeguindo.indexOf(idTitulo) > -1) {\r\n            this.setState({btSeguir: \"Seguindo\"})\r\n        }\r\n    }\r\n\r\n    async searchPosts(){\r\n        // Extrai id do conteudo da url\r\n        let idTitulo = this.titleId();\r\n\r\n        // Retorna itens da coleção posts\r\n        firebase.firestore().collection('posts')\r\n        .get()\r\n        .then((snapshot) => {\r\n            let posts = [];\r\n\r\n            // Percorre os posts adiciona ao array caso for relacionado\r\n            snapshot.forEach((doc) => {\r\n                if(doc.data().idConteudo == idTitulo){\r\n                    posts.push({\r\n                        usuario: doc.data().usuario,\r\n                        nome: doc.data().nome,\r\n                        desc: doc.data().desc,\r\n                        curtidas: doc.data().curtidas,\r\n                        idConteudo: doc.data().idConteudo,\r\n                        nomeConteudo: doc.data().nomeConteudo,\r\n                        comentarios: doc.data().comentarios,\r\n                        categoria: doc.data().categoria,\r\n                        userPost: doc.data().userId\r\n                    })\r\n                }\r\n            })\r\n\r\n            // Define o array de componentes 'posts' montados\r\n            let foundPosts = [];\r\n\r\n            // Se não encontrar posts, chama o componente <NotFound/>\r\n            if(posts.length == 0) {\r\n                foundPosts.push(<NotFound/>)\r\n            } else { // Se encontrar, monta os posts com as informações do post\r\n                posts.forEach((doc) => {\r\n                    foundPosts.push(<Post usuario={doc.usuario} nome={doc.nome} categoria={doc.categoria} userId={doc.userPost}\r\n                                            desc={doc.desc} curtidas={doc.curtidas} postId={doc.postId}\r\n                                            nomeConteudo={doc.nomeConteudo} comentarios={doc.comentarios} />) })\r\n            }\r\n            \r\n            // Atualiza o state contendo posts montados\r\n            this.setState({posts: foundPosts})\r\n        })   \r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            <div className=\"wrapper\">   \r\n                <Header username={this.state.userLog}/>\r\n        \r\n                <main>\r\n                    <div class=\"main-section\">\r\n                        <div class=\"container\">\r\n                            <div class=\"main-section-data\">\r\n                                <div class=\"row\">\r\n\r\n                                    { /* <!-- Menu Usuario --> */}\r\n                                    <MenuUsuario name={this.state.nameLog} username={this.state.userLog} url={this.state.url} userId={this.state.userId} />\r\n\r\n                                    { /* <!-- Seção de posts --> */}\r\n                                    <div class=\"col-lg-9 col-md-8 no-pd\">\r\n                                        <div class=\"main-ws-sec\">\r\n\r\n                                            <Titulo \r\n                                            nome={this.state.nome}\r\n                                            categoria={this.state.categoria}\r\n                                            genero={this.state.genero}\r\n                                            ano={this.state.ano}\r\n                                            duracao={this.state.duracao}\r\n                                            sinopse={this.state.sinopse}\r\n                                            seguidores={this.state.seguidores}\r\n                                            listaSeguindo={this.state.listaSeguindo}\r\n                                            userId={this.state.userId} />\r\n\r\n                                            <Postbar\r\n                                            categoria={this.state.categoria}\r\n                                            nomeConteudo={this.state.nome}\r\n                                            nomeUsuario={this.state.nameLog}\r\n                                            userId={this.state.userId}\r\n                                            userLog={this.state.userLog} />\r\n\r\n                                            <div class=\"posts-section\">\r\n\r\n                                                {this.state.posts}\r\n\r\n                                            </div>{/*<!--posts-section end-->*/}\r\n                                        </div>{/*<!--main-ws-sec end-->*/}\r\n                                    </div>\r\n                                </div>\r\n                            </div>{/*<!-- main-section-data end-->*/}\r\n                        </div> \r\n                    </div>\r\n                </main>\r\n\t        </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Conteudo;"]},"metadata":{},"sourceType":"module"}